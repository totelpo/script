#######################################################
totel@nitro:/nfs/sandboxes/ps/msb_8_0_36$ ./use foo -e'SELECT NOW() foo, @@version, @@version_comment';

tail -1 data/audit.log | jq '.[] | select(.name=="Query")'  ### JSON Select WHERE equivalent
tail -1 data/audit.log | jq '.[] | .timestamp, .sqltext, .db'   ### Select specific fields without field name
tail -1 data/audit.log | jq ".[] | {timestamp, sqltext, db}"    ### Select specific fields with    field name
tail -2 data/audit.log | jq '.[] | select(.name=="Query") | {timestamp, sqltext, db}' ### filter rows and fields

# jq docker inspect
docker inspect pmm-server | jq '{(.[].Name): getpath(path(.[].NetworkSettings.Networks)) | .[].IPAddress}'
docker inspect pmm-server | jq '.[].NetworkSettings.Networks.bridge.IPAddress'      ### without field name
docker inspect pmm-server | jq '.[].NetworkSettings.Networks.bridge | {IPAddress}'  ### with    field name
docker inspect pmm-server | jq '.[].State.Status'       ### without field name
docker inspect pmm-server | jq '.[].State | {Status}'   ### with    field name
docker inspect pmm-server | jq '.[].Mounts'
docker inspect pmm-server | jq '.[].HostConfig.VolumesFrom'
#######################################################
uni2ascii -B /tmp/ddl.sql > /tmp/ddl-v2.sql     ### convert unicode/utf8 to ascii to solve any MySQL syntax error due to encoding ### check with file command
file /tmp/ddl*.sql

#######################################################
# CS0046795 View: Support Case*
split -b 4M my.tgz 'my.tgz.part'  # Here is an example using a 12M tgz file split into 4M chunks

# https://stackoverflow.com/questions/3194349/how-do-i-split-a-file-into-n-no-of-parts
# For example, to split onepiece.log into 5 parts
split -l$((`wc -l < onepiece.log`/5)) onepiece.log onepiece.split.log -da 4
# This will create files like onepiece.split.log0000 ...

# https://kb.iu.edu/d/afar  # split

# https://stackoverflow.com/questions/1120095/split-files-using-tar-gz-zip-or-bzip2
# Create archives
gzip -c my_large_file | split -b 1024MiB - myfile_split.gz_

# Uncompress
cat myfile_split.gz_* | gunzip -c > my_large_file

#######################################################
# https://perf.wiki.kernel.org/index.php/Tutorial
If XtraBackup still running, can you please install perf and capture a sample:
1) Install perf.
On Ubuntu:
~$ sudo apt-get install linux-tools-$(uname -r) linux-tools-generic -y

On RHEL and clones:
~$ sudo yum install -y perf

2) Capture performance data with perf.
~$ mkdir $HOME/for-percona;
~$ cd $HOME/for-percona;
~$ sudo perf record -a -g -F99 -p $(pgrep -x xtrabackup) -- sleep 120;

That will record data for 2 minutes.

3) Convert the data collected by perf from binary format to a human-readable format:

$ sudo perf script | gzip > perf.script.gz

Finally send us the .gz for analysis.

Also having a few OS metrics of the decompress running would be good:

# CS0046441 good example of disk IO issue, so increasing the CPU parallelism might not help further.
iostat -dmx 1 300         > $HOME/for-percona/iostat.out &      ### 
pidstat  -d 5 60          > $HOME/for-percona/pidstat_d.out &   ### -d = Report  I/O  statistics ### will display the output 60 times (at a regular interval of 5 seconds)  ### with Average
vmstat   -w 1 300         > $HOME/for-percona/vmstat.out &      ### -w, --wide ### 1-second delay and 300 output updates = 5 minute run   # 
mpstat   -u -P ALL 1 300  > $HOME/for-percona/mpstat.out &      ### with Average

less CS0046441_mpstat.out | grep all | awk '{ sum += $NF; n++ } END { if (n > 0) print "Average : "sum / n, "with ", n, "sample data"; }'   ### average idle cpu
less vmstat.out | egrep -v 'procs|swpd' | awk '{ sum += $15; n++ } END { if (n > 0) print "Average : "sum / n, "with ", n, "sample data"; }'   ### average idle cpu
less vmstat.out | egrep -v 'procs|swpd' | awk '{ sum += $3;  n++ } END { if (n > 0) print "Average : "sum / n, "with ", n, "sample data"; }'   ### average swap
less iostat.out | grep -v loop | less


lsblk | sed -n '/ disk /,$p'
ls -lh /dev/mapper/
df -h /
iostat -p dm-1,dm-2,dm-0,nvme0n1 -dmx 1 300    ### to check slowness due to disk

#######################################################
totel@nitro:~$ cat for-percona.sh
v_cmd="ps aux > /tmp/ps.txt; egrep ' iostat | pidstat | vmstat | mpstat ' /tmp/ps.txt"
echo "+ ${v_cmd}"
eval "${v_cmd}"

if [ $? -gt 0 ]; then

iostat -p dm-1,dm-2,dm-0,nvme0n1 -dmx 1 300  > $HOME/for-percona/iostat.out &   ### to check laptop slowness due to disk
pidstat -d 5 60 > $HOME/for-percona/pidstat_d.out &         ### -d = Report  I/O  statistics ### will display the output 60 times (at a regular interval of 5 seconds)  ### with Average
vmstat -w 1 300 > $HOME/for-percona/vmstat.out &            ### -w, --wide ### 1-second delay and 300 output updates = 5 minute run   # 
mpstat -u -P ALL 1 300 > $HOME/for-percona/mpstat.out &   ### with Average

echo "+ ${v_cmd}"
eval "${v_cmd}"

fi
#######################################################

less pt-galera-log-explainer.out | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g'  ### Remove colors  ### https://stackoverflow.com/questions/17998978/removing-colors-from-output


kill -l          # list all kill signals
kill -l SIGKILL  # list signal number
kill -l 9        # list signal meaning

#######################################################

ls -lh | { sed -u q; nl ; }    ### nl start at second line

for file in /proc/*/status; do awk '/VmSwap|Name/{printf $2 " " $3}END{ print ""}' $file; done | sort -k 2 -nr| head -5 | column -t -o' '  ### KB0025808 top swap consumer

#######################################################
# https://www.linvirtshell.com/2018/10/how-to-readconvert-audit-log-timestamp.html
perl -pe 's/(\d+)/localtime/e' /var/log/audit/audit.log  | less    ### readconvert-audit-log-timestamp


#######################################################
ufw allow in on eth0 to 224.0.0.18 proto ah comment 'VLAN: keepalived multicast'   #### NOT yet tested
sudo ufw allow out 3306/tcp
sudo ufw allow in 3306/tcp   ###
sudo ufw allow from remote_IP_address to any port 3306
# To allow connection via loopback adapter only on port 3306 you can run the following:
sudo ufw allow from 127.0.0.1 to 127.0.0.1 port 3306 proto tcp

sudo ufw enable
sudo ufw status   ### will only output open ports if firewall is enabled
sudo ufw disable

#######################################################
#######################################################
# https://askubuntu.com/questions/100232/how-do-i-change-the-grub-boot-order
awk -F\' '/menuentry / {print $2}' /boot/grub/grub.cfg | nl --starting-line-number=0    # grub menu entries
sed -i.bak 's/^GRUB_DEFAULT=0/GRUB_DEFAULT=saved' /etc/default/grub
update-grub
grub-set-default 0

#######################################################

perl -i.bk -pe '$c = 0; s/ /|/ while $c++ < 3' -- file.txt   ### replace the first 3 occurences of space( ) with pipe(|). It cannot be done with sed.

journalctl -u service-name.service    # systemctl/systemd log for a service
journalctl -u service-name.service -b # systemctl/systemd log for a service only for the current boot 
journalctl -u keepalived.service --no-pager --since "2023-11-03 20:10:10"
journalctl -u keepalived.service --no-pager --since=today
journalctl -u keepalived.service -b | egrep ' systemd\[1\]: Starting | systemd\[1\]: Stopping | Entering | VRRP_Script' | tail -3

systemctl status keepalived.service --full -n1000000000 | egrep ' systemd\[1\]: Starting | systemd\[1\]: Stopping | Entering | VRRP_Script' | tail -3


shasum -ca 256 pmm-server-2.39.0.sha256sum   ### will look for file pmm-server-2.39.0.* to compare

#######################################################
# vim / vi  # https://linuxhandbook.com/vim-indentation-tab-spaces/
:set autoindent expandtab tabstop=2 shiftwidth=2     ### vim / vi for working in a yaml file # add to ~/.vimrc to make it permanent

#######################################################
cat query-rules.txt | grep '|' | head -1 | sed 's/|/\n/g' | nl		### print column numbers for awk used

systemctl restart rsyslog   ### resume logging if /var/log/messages was deleted of moved
#######################################################

# readlink -f /usr/local/mysql/lib/libgalera_smm.so	# symlink # if your symbolic link involves multiple layers such as one link indicted to another, use -f option
/usr/local/Percona-XtraDB-Cluster-5.7.41-rel44-65.1.Linux.x86_64.glibc2.17-minimal/lib/libgalera_smm.so

#######################################################
pidstat -r -p $(pidof mysqld) 5  # RAM usage every 5 seconds
pidstat -t -p $(pidof mysqld) 1   ### Anil # check high cpu usage ID for mysqld every 1 second
pidstat -t -p $(pidof mysqld) | awk 'NR <= 3; NR > 3 {if($9 > 50) print $0 }' ### check high cpu usage ID for mysqld greater than 50%

# https://www.thegeekstuff.com/2014/11/pidstat-examples/
pidstat -C "mysql"


#######################################################

virsh domiflist c7-186-pxc57	            ## will output vnet3
virsh domif-getlink c7-186-pxc57 vnet3      ## get network device status
virsh domif-setlink c7-186-pxc57 vnet3 down ## KVM simulate unlug/cable
virsh domif-setlink c7-186-pxc57 vnet3 up   ## bring up network device

#######################################################
# ubuntu 22 terminal border
cat << EOF > ~/.config/gtk-3.0/gtk.css
decoration {
  border: 1px solid gray;
  background: gray;
}
EOF

#######################################################

ifconfig enp0s8 192.168.56.103 netmask 255.255.255.0
#######################################################

apt-config dump | grep -i Downloaded

# vi /etc/apt/apt.conf.d/20archive	## keep apt cache
Binary::apt::APT::Keep-Downloaded-Packages "1";

#######################################################

# desync time
systemctl disable --now chronyd 	## wait for a few minutes to take effect
timedatectl set-time `date --date="-2 seconds" '+%H:%M:%S'`
## timedatectl set-time 11:45:00

timedatectl list-timezones | grep Manila

timedatectl set-timezone Europe/London      ### with daylight saving
timedatectl set-timezone Europe/Berlin      ### with daylight saving
timedatectl set-timezone Africa/Douala      ### no daylight saving
systemctl disable --now chronyd 	## wait for a few minutes to take effect
timedatectl set-time '2023-10-29 01:00:00'
timedatectl set-time '2024-03-31 03:00:00'

timedatectl set-timezone Asia/Manila
systemctl enable --now chronyd
timedatectl set-ntp yes
timedatectl set-time '2024-01-29 11:23:00'

#######################################################
paste <(cat CS0034586_pmm-server_2023-03-13_12-52/supervisorctl_status.log | sed 's/$/|/' | column -t -s'|' -o'|')  ~/Downloads/t/t/supervisorctl_status.log	 ## compare side-by-side
paste <(cat 02-env-1.txt | cut -c -70 | sed 's/$/|/' | column -t -s'|' -o'|')  <(cat 02-env-2.txt | cut -c -70)   ## compare side-by-side
 
dos2unix upgrade_before.txt   ### dos2unix : remove control-m (^M) from text  # convert
dos2unix upgrade_after.txt    ### dos2unix : remove control-m (^M) from text  # convert
diff -W 170 -y upgrade_before.txt upgrade_after.txt  | less   ## compare side-by-side

curl --silent http://repo.mysql.com/ | sed 's/HREF="/\nHREF="/; s/"/ /g' | grep ^HREF | awk '{ print $2 }' | egrep '-el7|el8|el9'   ### curl list remote files
#######################################################

apt install apt-file  ### yum provides equivalent
apt-file update
apt-file search libssl.so.10
apt-file search libnuma.so.1

#######################################################

ldd --version	### get glibc2 version
ldd /usr/local/mysql/bin/mysqld	## check library dependecies
ldd $(which mysqld)

strings /nfs/opt/mysql/8.0.29/lib/private/libssl.so | grep "^OpenSSL"   # get openssl version

export LD_LIBRARY_PATH=/snap/core18/2679/usr/lib/x86_64-linux-gnu/
/snap/core18/2679/usr/bin/openssl version

#######################################################
# https://www.digitalocean.com/community/tutorials/how-to-list-and-delete-iptables-firewall-rules
iptables -S
iptables -L

#######################################################
# https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands
# Allowing Internal Network to access External
# Assuming eth0 is your external network, and eth1 is your internal network, this will allow your internal to access the external:
sudo iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT


#######################################################
# iptables PXC network failure test
#######################################################
# On mysql3# 
iptables ­-A INPUT ­-s mysql1 -j DROP; iptables ­-A OUTPUT ­-s mysql1 ­-j DROP   ## Partial network outage of mysql3

## Total Network Outage on mysql3#
iptables ­-F ­­### Clear any previous `iptables` rules
iptables -A INPUT  -s mysql1 -j DROP; \
iptables -A INPUT ­-s mysql2 -j DROP; \
iptables -A OUTPUT -s mysql1 -j DROP; \
iptables -A OUTPUT -s mysql2 -j DROP

# On 192.168.122.176
iptables -A INPUT  -s 192.168.122.174 -j DROP; \
iptables -A INPUT  -s 192.168.122.175 -j DROP; \
iptables -A OUTPUT -s 192.168.122.174 -j DROP; \
iptables -A OUTPUT -s 192.168.122.175 -j DROP


#######################################################

awk '{ print NF }' FPAT='([^,]+)|("[^"]+")' 'CS0033045_EXPLAIN EXTENDED.csv' | column -t -s'|'   ### convert csv : print number of columns
awk 'BEGIN{OFS="|";} { print $1,$2,$3,$4,$5,substr($6, 1, 20),$7,$8,$9,$10,$11,$12 }' FPAT='([^,]+)|("[^"]+")' 'CS0033045_EXPLAIN EXTENDED.csv' | column -t -s'|' -o'|' ### convert csv

echo 'SUB_ACC_NO|CLIENT_ID|ETL_DATE' | awk -F\| 'BEGIN{OFS="|";} { for (i=1;i<=NF;i++) printf i"-"$i""OFS }' | column -t -s'|' -o' | ' ### print column name with column number

sudo -H -u mysql bash -c 'echo "I am $USER, with uid $UID"'   ### execute command as another OS user
sudo -H -u mysql bash 	### Login for a user with $SHELL = /bin/false
su - mysql -s /bin/bash -c 'echo "I am $USER, with uid $UID"'   ### execute command as another OS user

tcpdump -l -i eth0 -w - src or dst port 3306 | strings  # check whether MySQL data streams are unencrypted

#######################################################
# demo for "No space left on device" due to inodes
#######################################################
dd if=/dev/zero of=/tmp/test.img  bs=1M seek=32 count=0    ### 32MB
mkfs.ext4 /tmp/test.img
mkdir /mnt/test
mount /tmp/test.img /mnt/test
df -hT /mnt/test
df -i  /mnt/test   ### inodes
for i in {1..8181}; do touch /mnt/test/test$i.txt; done
touch /mnt/test/test.txt
#######################################################
# dd sample ~/d/demo/linux/no-disk-space-due-to-inodes-datadir.txt

#######################################################

top   # On linux you can use e key to change task memory(type E) scale, ranging from bytes to petabytes. 
      # When you have selected what you like, press W (shift + w) to save changes to ~/.toprc.
      # While lower-case "e" does the same individual process lines

top -b -n1 -o %MEM | head   # %MEM is directly related to RES, it’s the percentage use of total physical memory by the process.

top -b -n1 | awk 'NR <= 7; NR > 7 {if($9 > 50) print $0 }' ### cpu with 50% or more

ps aux | egrep 'COMM|mysqld' | awk 'NR>1 {$5=int($5/1024)"M"; $6=int($6/1024)"M";}{ print;}' | column -t     ### display memory in MB

# curl 
curl -O -R https://downloads.percona.com/downloads/Percona-Server-8.0/Percona-Server-8.0.32-24/binary/tarball/Percona-Server-8.0.32-24-Linux.x86_64.glibc2.17.tar.gz
        -R, --remote-time   Set the remote file's time on the local output
        -O, --remote-name   Write output to a file named as the remote file
	-C, --continue-at OFFSET  Resumed transfer offset

curl -R -o /tmp/get-docker.sh get.docker.com   ### download to specific filename

#######################################################
# open files limit
su mysql --shell /bin/bash --command "ulimit -n"
su mysql --shell /bin/bash --command "ulimit -Sn"
su mysql --shell /bin/bash --command "ulimit -Hn"

############################################
# lsof find pid base on port usage
############################################
c7-181-pxc80:mysql.sock [43] ((none)) root@mysql> show processlist;
+----+-----------------+-----------------------+------+---------+------+--------------------------+------------------+-----------+---------------+
| Id | User            | Host                  | db   | Command | Time | State                    | Info             | Rows_sent | Rows_examined |
+----+-----------------+-----------------------+------+---------+------+--------------------------+------------------+-----------+---------------+
| 44 | root            | 192.168.122.182:52100 | test | Sleep   |    3 |                          | NULL             |         1 |             1 |

[root@c7-182-pxc80 ~]# lsof -i :52100
COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
mysql   2607 root    3u  IPv4  24329      0t0  TCP c7-182-pxc80:52100->192.168.122.181:mysql (ESTABLISHED)

############################################
lsof -u mysql | wc -l   ### count open files for mysql user
lsof -n -p $(pidof mysqld) | wc -l

grep 'open files' /proc/$(pidof mysqld)/limits

prlimit -n -p $(pgrep -xn mysqld) 
# https://dev.mysql.com/doc/refman/8.0/en/using-systemd.html#systemd-mysql-configuration
# https://docs.percona.com/percona-xtradb-cluster/5.7/management/configure-timeoutstartsec.html
systemctl show mysql | egrep 'LimitNOFILE|Nice|LimitCO|Environment|TimeoutStartUSec'
systemctl status mysql -l	###  -l --full           Don't ellipsize unit names on output

systemctl cat  mysql | grep . | grep -v '^#' | sed 's/^\[/\n[/' | egrep '^\[|^Timeout' # current setting  # CS0046050

systemctl cat  mysql | grep -i alias
grep Alias /etc/systemd/system/mysqld.service    ### Do not edit the alias service
systemctl edit mysql 		### edit /etc/systemd/system/mysql.service.d/override.conf	### does not gets overitten during upgrade
systemctl edit --full mysql	### edit /etc/systemd/system/mysql.service			### gets overitten during upgrade

journalctl -u mysqld.service -b
journalctl -xe > j.out      ### know where mysql failed(e.g. start-post) CS0046042
  # CS0046042 # May 01 04:54:03 testing-dev02.shopperschoice.com systemd[1]: mysql.service start-post operation timed out. Stopping.


CREATE DATABASE sbtest_db;
CREATE USER sbtest_user IDENTIFIED WITH mysql_native_password BY 'Secret1!';
GRANT ALL PRIVILEGES ON sbtest_*.* TO sbtest_user;

sysbench --db-driver=mysql --mysql-user=sbtest_user --mysql_password='Secret1!' --mysql-db=sbtest_db --mysql-host=192.168.122.183 --mysql-port=3306 --mysql-ssl=off --tables=1000 --table-size=10 /usr/share/sysbench/oltp_read_write.lua prepare

[root@c8-183 data]# lsof -n -p $(pidof mysqld) | wc -l
171              #### error happens ### cannot create file

c8-183:mysql.sock [22] root@mysql> create table totel8(i int not null primary key);
ERROR 1030 (HY000): Got error 168 - 'Unknown (generic) error from engine' from storage engine

2023-08-17T13:44:02.709463+08:00 22 [ERROR] [MY-012592] [InnoDB] Operating system error number 24 in a file operation.
2023-08-17T13:44:02.709544+08:00 22 [ERROR] [MY-012596] [InnoDB] Error number 24 means 'Too many open files'
2023-08-17T13:44:02.709555+08:00 22 [ERROR] [MY-012646] [InnoDB] File ./sbtest_db/totel8.ibd: 'create' returned OS error 124.
2023-08-17T13:44:02.709559+08:00 22 [ERROR] [MY-012592] [InnoDB] Operating system error number 24 in a file operation.
2023-08-17T13:44:02.709563+08:00 22 [ERROR] [MY-012596] [InnoDB] Error number 24 means 'Too many open files'
2023-08-17T13:44:02.709569+08:00 22 [ERROR] [MY-012126] [InnoDB] Cannot create file './sbtest_db/totel8.ibd'
2023-08-17T13:44:02.731158+08:00 0 [Note] [MY-000000] [Galera] Member 0(pxc-node-183) initiates vote on eaf9517c-3ca7-11ee-9a63-bec255d57fba:980,b1e71151294bbd23:  Got er
ror 168 - 'Unknown (generic) error from engine' from storage engine, Error_code: 1030;


for i in {1..99}; do echo "select * from sbtest$i limit 1;" ; done > t.sql

#######################################################
du -shc /var/* 2>/dev/null | sort -hk1            # disk usage
#######################################################

esc > 55 > i > # > esc > esc    # vi generate 55 characters of #

find 7/*/packages -type d -not -empty           # find not empty directories
find / -iname resize-xfs-lvm -print 2>/dev/null # skip / do not print "Permission denied"

rm -rf /test_data/*  /test_data/.[!.]*  ### remove all files from folder including hidden files
#######################################################

alternatives --list | grep python3
alternatives --set python3 /usr/bin/python3.8

# less ~/d/demo/mysql/java/010-jdbc-mysql-el.txt
yum install java-17-openjdk java-17-openjdk-devel  ### el8
yum install mysql-connector-java-8.0.30            ### el8, also automatically install java11
yum --setopt=obsoletes=0 install mysql-connector-java-8.0.30 java-devel

update-alternatives --config java
java -version

#######################################################
# import gpg key
yum-config-manager --enable  mysql57-community
cd /tmp/
wget -c https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
rpm --import RPM-GPG-KEY-mysql-2022
rpm -qa gpg-pubkey*

#######################################################
yum-config-manager --disable mysql\*

#######################################################
#######################################################
eval "printf '#%.0s' {1..$COLUMNS}"
printf "%05d\n" 1   ## zero padded

#######################################################
nl -ba /tmp/t.txt   # number all like

#######################################################
sudo sed -i '/^GRUB_CMDLINE_LINUX/ s/"$/ systemd.unified_cgroup_hierarchy=0"/' /etc/default/grub # for LXD on Ubuntu 22

cat /etc/resolv.conf | sed '0,/^namese/s//New Inserted Line\n&/' # insert before line on first match

cp -nv my.sandbox.cnf my.sandbox.cnf.bkp
grep lower_case_table_names my.sandbox.cnf || sed -i '/\[mysqld\]/a lower_case_table_names' my.sandbox.cnf 	 ### sed insert after match
grep -B1 lower_case_table_names my.sandbox.cnf

#######################################################
                                # If a file foo exists in the target, then…
cp -r --backup   source target  #   rename foo → foo~
cp -r --backup=t source target  #   rename foo → foo.~1~ (or foo.~2~, etc)


#######################################################
tcpdump -l -i eth0 -w - src or dst port 3306 | strings   # https://dev.mysql.com/doc/refman/5.7/en/security-guidelines.html

#######################################################
# vim remove windows character ^M
:e ++ff=dos

#######################################################
# get installed softwares

dpkg -S "$(which column)"   # determine which packages provides the binary
dpkg -S "$(which mysql)"    # determine which packages provides the binary
dpkg -S "$(which apt-file)" # determine which packages provides the binary

dpkg -l|egrep -i 'mysql|percona|mariadb|perl'
ls /etc/apt/sources.list.d/ 	### equivalent of /etc/yum.repos.d
apt-file search mysqlsh		### equivalent of : yum provides mysqlsh
apt-cache madison percona-server-server-5.7         # list versions available
apt list --all-versions  percona-server-server*    # list versions available
apt install percona-server-server-5.7=5.7.42-45-1.jammy
apt install percona-server-server-5.7=5.7.42-46-1.jammy percona-server-common-5.7=5.7.42-46-1.jammy percona-server-client-5.7=5.7.42-46-1.jammy
apt install percona-xtradb-cluster-server=1:8.0.32-24-2.focal percona-xtradb-cluster-client=1:8.0.32-24-2.focal percona-xtradb-cluster-common=1:8.0.32-24-2.focal


rpm -qa|egrep -i 'mysql|percona|mariadb|perl'

rpm -qpR Percona-XtraDB-Cluster-server-57-5.7.37-31.57.1.el7.x86_64.rpm | grep -i percona  ### get dependencies of rpm file
rpm -qR Percona-XtraDB-Cluster-server-57 | grep -i percona  ### get dependencies of an installed packaged
yum deplist percona-replication-manager ### get dependencies of an installed packaged

rpm -qa --queryformat '%{name}.%{arch} | %{version}-%{release} | %{vendor} | %{INSTALLTIME:date +%Y-%m-%d %H:%M:%S} | %{size}\n' | grep -v CentOS | column -t -s'|'	### http://ftp.rpm.org/max-rpm/ch-queryformat-tags.html
rpm -q percona-postgresql14-server percona-postgresql14-contrib percona-postgresql14 percona-postgresql11-server percona-postgresql11-contrib percona-postgresql11 python-psycopg --queryformat '%{name}.%{arch} | %{version}-%{release} | %{vendor} | %{INSTALLTIME:date} | %{size}\n' | grep -v CentOS | column -t -s'|' -o'|'	### http://ftp.rpm.org/max-rpm/ch-queryformat-tags.html

dnf list installed | grep percona

#######################################################
# safely remove disk
#######################################################
df -hT | egrep 'media|File'

umount /media/totel/data
lsblk /dev/sda

udisksctl power-off -b /dev/sdX   # safely remove disk # ubuntu 22

#######################################################
# terminal width and height
#######################################################
tput cols
tput lines

#######################################################
# join all line With a Single Character Delimiter

cat /tmp/t.txt | tr '\n' ',' | sed 's/ SELECT /\nSELECT /; s/ FROM /\n  FROM /; s/ WHERE /\n WHERE /; s/ AND /\n AND /g; s/ ORDER BY /\n ORDER BY /'

yum repolist  enabled | egrep 'Percona|MySQL' | awk '{ print $1 }' | tr '\n' ','  # join all line

#######################################################
# tar
#######################################################
# list the contents of tar file
    tar -ztvf archive.tar.gz
    tar -tvf my-data.tar.gz 'search-pattern'
# create tar file
    tar -czvf log-work.tar.gz log-work
    tar -cvf  log-work.tar    log-work
# update tar file
    tar -uvf log-work.tar     log-work
# extract files in a given directory
    tar -xzvf projects.tar.gz -C /tmp/
# Extract multiple tar files in subdirectories
     tar xzvf big-archive.tgz Baz/Foo.java Baz/Bar.java

zip --encrypt -D -u -r offer-tcs.zip Offer_*.pdf

#######################################################
# set same prompt and title
PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\] \$ '
# set different prompt and title
PS1='\[\e]0; \W\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\] \W\[\033[00m\] \$ '

PS1='\033]0;New terminal title\a\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\] \W\[\033[00m\] \$ '

PS1='[\u@\h \W]\$'		# centos 7

#######################################################
dnf --disablerepo=\* --enablerepo=ps-80-release-x86_64 list --showduplicates percona-server-server

dnf --disablerepo=\* --enablerepo=media-baseos,media-appstream,local-ps-80 -y install tzdata jemalloc which cracklib-dicts policycoreutils   
dnf --disablerepo=\* --enablerepo=media-baseos,media-appstream,local-ps-80 -y install percona-server-server-8.0.28-19.1.el8 percona-server-devel-8.0.28-19.1.el8 percona-server-rocksdb-8.0.28-19.1.el8  
dnf install percona-server-server-8.0.18-9.1.el8 percona-server-client-8.0.18-9.1.el8 percona-server-shared-8.0.18-9.1.el8 percona-server-shared-compat-8.0.18-9.1.el8

########################################

########################################
[tots@asus-r8 ~]$ sudo cat logrotate-test.conf
/home/tots/log/test.log {
    su tots tots
    copytruncate
    daily
    # retain 3 copies
    rotate 3
    # use date as a suffix of the rotated file
    dateext
}

chmod 600       ~/logrotate-test.conf
chown root:root ~/logrotate-test.conf
sudo logrotate -f ~/logrotate-test.conf


########################################
route -n
ping -c 4 -S 172.31.83.1 10.115.1.124   # ping specific gateway

# route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.122.1   0.0.0.0         UG    100    0        0 eth0
192.168.122.0   0.0.0.0         255.255.255.0   U     100    0        0 eth0

hostname -i     # --ip-address # get IP

ip route del default	        ### simulate network failure
ip route del 192.168.122.0/24   ### simulate network failure

ifdown eth0; ifup   eth0	### reset route

ip a add 192.168.122.170/24 dev eth0  ### To assign a virtual IP (VIP), volatile until reboot:
ip a del 192.168.122.170/24 dev eth0  ### To delete a virtual IP (VIP), volatile until reboot:

# https://access.redhat.com/sites/default/files/attachments/rh_ip_command_cheatsheet_1214_jcs_print.pdf
ip addr show dev eth0 | grep 'inet '  ### list all ipv4 IPs for eth0 device

# list all ip except for loopback ip
ip a | grep -v ' lo' | egrep ' eth|inet '                     # list all ip except for loopback ip
nmcli dev show | egrep 'DEVICE|IP4.ADDRESS' | grep -A1 ' eth' | sed '/^GENERAL/N;s/\n/ /' | column -t # list all ip except for loopback ip


########################################
# simulate network failure # https://www.baeldung.com/linux/network-failures-simulation
# https://samwho.dev/blog/emulating-bad-networks/


tc qdisc show
tc qdisc show dev eth0
tc qdisc add dev eth0 root netem delay 4000ms  # add a fixed delay of 4000ms for any packets going through eth0
    ### el9 for netem # DID NOT FIX # Error: Specified qdisc kind is unknown.
tc qdisc delete dev eth0 root                  # revert/remove delay 

rm -f /tmp/stop-delay.txt
delayms=2500; delaysec=`echo "scale=2; ${delayms}/1000" | bc`; while [ ! -f /tmp/stop-delay.txt ]; do tc qdisc add dev eth0 root netem delay ${delayms}ms; sleep ${delaysec}; tc qdisc delete dev eth0 root; sleep 0.25; don
touch /tmp/stop-delay.txt

# https://github.com/percona/support-snippets/blob/master/network/add_latency.sh  # delay script by Marcos

########################################
# Setup sudo privileges
########################################
# Create group and user
useradd  --uid 1000 totel --create-home
passwd   totel

useradd mysql -r -g mysql -s /bin/false
usermod mysql --home /var/lib/mysql -s /bin/false


# Edit via visudo (safe)
visudo -f /etc/sudoers.d/dbsupport

# OR
cat << EOF > /etc/sudoers.d/dbsupport
# allow user to execute without password for specific command
totel ALL=NOPASSWD: /usr/bin/docker exec -it rockylinux1 bash
# allow user to execute without password for all commands
tots  ALL=(ALL) NOPASSWD: ALL

# allow group
%dbsupport ALL=NOPASSWD: /usr/bin/docker exec -it oraclelinux1 bash
%dbsupport ALL=NOPASSWD: /usr/bin/mkdir
%dbsupport ALL=NOPASSWD: /usr/bin/chown
EOF
cat << EOF > /etc/sudoers.d/dbsupport

cat << EOF > /etc/sudoers.d/pxb
# https://docs.percona.com/percona-xtrabackup/2.4/howtos/permissions.html
%dbsupport ALL=PASSWD: /usr/bin/
%dbsupport NOPASSWD: /etc/init.d/mysqld
%dbsupport NOPASSWD: /bin/vi /etc/mysql/my.cnf
%dbsupport NOPASSWD: /usr/local/bin/top
%dbsupport NOPASSWD: /usr/bin/ls
EOF



########################################
# passwordless FTP
[cdmuser1@CICT-DEVCDMAPP02 ~]$ cat .netrc
machine IP_ADDRESS login USERNAME password SECRET
[cdmuser1@CICT-DEVCDMAPP02 ~]$ ls -lh .netrc
-r--------. 1 cdmuser1 cdmuser1 44 Dec  2 17:50 .netrc

########################################
[root@CICT-DEVCDMDB03 cdmdba]# dnf install screen

su - enterprisedb
screen -S ddb02  # create 
screen -S test -L -Logfile screen-test-$(date '+%FT%H%M%S').log
screen -S test -L -Logfile screen-test.log bash   ### with command of choice
screen -S test -L -Logfile screen-test.log mysql -uroot -h192.168.122.2  ### with command of choice
CTRL + a + d     #  run screen in background
screen -ls  # list
screen -d -r 1643   # detach and reattach here using PID
screen -d -r ddb02  # detach and reattach here using screen name


########################################
useradd -r  --create-home -g cdmadmin -G wheel,cdmappuser cdmuser1   # -r system user  # 2022-01-28 c/o Smriti # Please create cdmuser1 / X$Cdm@us3r1 on 172.31.85.27 CICT-UATCDM02 uat02
usermod -g cdmadmin -G wheel,cdmappuser cdmuser1

[Tuesday 8:56 PM] Subhanshu Kushwaha
Please provide sudo access to cdmuser1 for IP 172.31.87.26

[root@CICT-SITHCDMA04 cdmadmin]# date; id cdmuser1
Thu Feb 17 11:51:08 PST 2022
uid=1003(cdmuser1) gid=1004(cdmuser1) groups=1004(cdmuser1)
[root@CICT-SITHCDMA04 cdmadmin]# usermod -g cdmadmin -G wheel,cdmappuser cdmuser1
[root@CICT-SITHCDMA04 cdmadmin]# date; id cdmuser1
Thu Feb 17 11:51:42 PST 2022
uid=1003(cdmuser1) gid=1001(cdmadmin) groups=1001(cdmadmin),10(wheel),1002(cdmappuser)
[root@CICT-SITHCDMA04 cdmadmin]#

useradd -g cdmappuser -G cdmappuser,wheel shiva   # usermod -g cdmappuser -G cdmappuser,wheel shiva
passwd shiva 

########################################
f_ip_get_all() {
# totel 2022-01-26
# https://unix.stackexchange.com/questions/489410/how-to-join-a-line-with-a-pattern-with-the-next-line-with-sed
nmcli dev show | egrep 'GENERAL.DEVICE|IP4.ADDRESS' | sed 's/^/|/' | sed -e '/^|GENERAL.DEVICE/bpp' -e 'H;$bpp' -e 'd' -e ':pp' -e 'x;/^$/d;s/\n/ /g' | tr -s '[:space:]' | column -t -s'|' -o'|' -H1 | egrep -v ' virbr0 | lo '
}

########################################
# logging
psql -U cdmuser -W -d cdmdb_main -p 5432 -h 10.168.226.45 < cdmdb_dev_main.sql | tee   cdmdb_dev_main.import-2.log  # Simple log
psql -U cdmuser -W -d cdmdb_main -p 5432 -h 10.168.226.45 < cdmdb_dev_main.sql 2>&1 &> cdmdb_dev_main.import-2.log  # logging all errors/output

########################################
sar # handle historical data unlike iostat

sudo /usr/lib64/sa/sa1 SECONDS COUNT
sudo /usr/lib64/sa/sa1 1 1 # gather data every 1 second and 1 count




########################################
# iostat
Examples : 
iostat
Display a single history-since-boot report for all CPU and Devices.

[cdmdba@CICT-DEVCDMDB02 ~]$ df -h /db
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdb1       1.1T   13G  1.1T   2% /db
[cdmdba@CICT-DEVCDMDB02 ~]$ date; iostat -d | egrep 'Device|sdb'
Wed Feb 23 19:57:06 PST 2022
Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
sdb               6.66         1.28        55.74    3674233  160595668

[cdmdba@CICT-DEVCDMDB01 ~]$ df -h /db/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdb1       1.1T   27G 1001G   3% /db
[cdmdba@CICT-DEVCDMDB01 ~]$ date; iostat -d | egrep 'Device|sdb'
Wed Feb 23 19:59:36 PST 2022
Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
sdb               8.12         3.33       178.95   11462985  616420508

[cdmdba@CICT-DEVCDMDB01 ~]$ date; iostat -p sdb -d   # for device sdb and all partitions
Wed Feb 23 20:04:34 PST 2022
Linux 4.18.0-240.el8.x86_64 (CICT-DEVCDMDB01)   02/23/2022      _x86_64_        (16 CPU)

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
sdb               8.12         3.33       178.95   11462985  616496448
sdb1              8.12         3.33       178.95   11461301  616496448

########################################
sudo chage -l enterprisedb   # list user password expiry information

chage -I -1 -m 0 -M 99999 -E -1 username   # change password to never expire

###################################################
ssh-keygen -p -f /home/totel/.ssh/totel-trng-us-east-1-consulting.pem    # encrypt an existing private key # suggested by Kollide

ssh-keygen -f ~/.ssh/id_rsa -N ''   # non-interactive and no paraphrase
ssh-keygen -f /tmp/test_id_rsa
ssh-keygen -f ~/.ssh/id_rsa_kvm   # x

[enterprisedb@CICT-DEVCDMDB03 ~]$ head -1 /tmp/test_id_rsa
-----BEGIN OPENSSH PRIVATE KEY-----

ssh-keygen -p -f /tmp/test_id_rsa -m pem    # file must already exists # convert heading OPENSSH to RSA # ask by Varsha

[enterprisedb@CICT-DEVCDMDB03 ~]$ head -1 /tmp/test_id_rsa
-----BEGIN RSA PRIVATE KEY-----

# request by varsha for activation servers 
ssh-keygen
ssh-keygen -p -f .ssh/id_rsa -m pem   # convert heading OPENSSH to RSA # ask by Varsha
head -1 .ssh/id_rsa
cd .ssh/
cat id_rsa.pub >> authorized_keys
ls -lh authorized_keys
# chmod 600 authorized_keys

###################################################

export HISTTIMEFORMAT='%F %T '

history  | tail
###################################################
 ps L # list STANDARD FORMAT SPECIFIERS
 ps L | egrep ' USER | PID | %CPU | %MEM | VSZ | RSS | TTY | STAT | START | TIME | COMMAND '   ## ps aux ## heading

# man ps
AIX FORMAT DESCRIPTORS
       This ps supports AIX format descriptors, which work somewhat like the formatting codes of printf(1) and printf(3).  For example, the normal default output can be produced with
       this: ps -eo "%p %y %x %c".  The NORMAL codes are described in the next section.

       CODE   NORMAL   HEADER
       %C     pcpu     %CPU
       %G     group    GROUP
       %P     ppid     PPID
       %U     user     USER
       %a     args     COMMAND
       %c     comm     COMMAND
       %g     rgroup   RGROUP
       %n     nice     NI
       %p     pid      PID
       %r     pgid     PGID
       %t     etime    ELAPSED
       %u     ruser    RUSER
       %x     time     TIME
       %y     tty      TTY
       %z     vsz      VSZ

STANDARD FORMAT SPECIFIERS
       Here are the different keywords that may be used to control the output format (e.g. with option -o) or to sort the selected processes with the GNU-style --sort option.
       For example: ps -eo pid,user,args --sort user
       This version of ps tries to recognize most of the keywords used in other implementations of ps.
       The following user-defined format specifiers may contain spaces: args, cmd, comm, command, fname, ucmd, ucomm, lstart, bsdstart, start.
       Some keywords may not be available for sorting.
       CODE        HEADER    DESCRIPTION
       %cpu        %CPU      cpu utilization of the process in "##.#" format.  Currently, it is the CPU time used divided by the time the process has been running (cputime/realtime
                             ratio), expressed as a percentage.  It will not add up to 100% unless you are lucky.  (alias pcpu).

ps -e -o %U, -o %p,%C, -o %mem -o ,%a > ps.csv
ps aux | head -2
ps -e -o %U, -o stat -o ,%p, -o start_time -o ,%C, -o %mem -o ,%z, -o rss, -o ,%y, -o bsdtime -o ,%a, -o lstart > ps-aux.csv 
grep -v 'ps ' ps-aux.csv | tr -s ' ' | sed 's/, /,/g' | column -t -s',' -o '|' | egrep '^USER|mysqld'


###################################################
[cdmadmin@CICT-UATCDM01 ~]$ route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.28.1    0.0.0.0         UG    100    0        0 ens192
192.168.28.0    0.0.0.0         255.255.255.0   U     100    0        0 ens192
192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0
[cdmadmin@CICT-UATCDM01 ~]$

###################################################

# subnet
/24 256
/25 128
/26  64
/27  32
/28  16
/29   8
/30   4
/31   2
/32   1


#############################################################################
# ~/.ssh/config
host c3
	hostname 192.168.254.103
	user u0_a91
	port 2222
host m1
        hostname 23.101.7.21
        user azureuser
        IdentityFile C:\Users\1962690\.ssh\keys\hadoop-m1_key.pem


#############################################################################
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-port_forwarding

To redirect the port:
Redirect the port 80 to port 88 for TCP traffic:
~]# firewall-cmd --add-forward-port=port=80:proto=tcp:toport=88
~]# firewall-cmd --add-forward-port=port=9999:proto=tcp:toport=5444     # if all pgPool nodes are Down no Apps reconfiguration needed. Just Assign the VIP to the primary DB
Make the new settings persistent after restart:
~]# firewall-cmd --runtime-to-permanent
Check that the port is redirected:
~]# firewall-cmd --list-all 


Example 5.2. Removing TCP Port 80 forwarded to Port 88 on the Same Machine

To remove the port redirection:
List redirected ports:
~]# firewall-cmd --list-forward-ports 
port=80:proto=tcp:toport=88:toaddr=
Remove the redirected port from the firewall::
~]# firewall-cmd --remove-forward-port=port=80:proto=tcp:toport=88:toaddr=
~]# firewall-cmd --remove-forward-port=port=9999:proto=tcp:toport=5444:toaddr=
Make the new settings persistent:
~]# firewall-cmd --runtime-to-permanent

## Port forward 9999 to 5444 will be used when all pgPool is down
# firewall-cmd    --add-forward-port=port=9999:proto=tcp:toport=5444     # if all pgPool nodes are Down no Apps reconfiguration needed. Just Assign the VIP to the primary DB
# firewall-cmd --runtime-to-permanent
# firewall-cmd --remove-forward-port=port=9999:proto=tcp:toport=5444:toaddr=
# firewall-cmd --runtime-to-permanent

#############################################################################
# ssh tunneling
# https://www.howtogeek.com/168145/how-to-use-ssh-tunneling/
# When you attempt to access the database server at port 8888 on your current PC, the traffic will be sent over the SSH connection. When it arrives on the system running the SSH server, the SSH server will send it to port 1234 on “localhost”, which is the same PC running the SSH server itself.
#   So the “localhost” in the command below means “localhost” from the perspective of the remote server.

ssh -L 8888:localhost:1234 bob@ssh.youroffice.com

ssh -i C:\Users\1962690\.ssh\id_rsa -L 8888:localhost:8080 u0_a91@192.168.43.43 

ssh -i C:\Users\1962690\.ssh\id_rsa -L 0.0.0.0:8161:db1:8161 tots@192.168.43.81          # activeMQ # listen on any IP on my laptop

REM EDB PEM server
ssh -i C:\Users\1962690\.ssh\id_rsa -L 8443:edb1:8443 tots@192.168.43.81

# pgAdmin4
ssh -i C:\Users\1962690\.ssh\id_rsa -L 8080:db1:80 tots@192.168.43.81

# pgBouncer
ssh -i C:\Users\1962690\.ssh\id_rsa -L 6432:db1:6432 tots@192.168.43.81
psql -d db1 -U postgres -p 6432 -h 192.168.43.81

# hbase webui
ssh -i C:\Users\1962690\.ssh\id_rsa -L 8080:r8t7:16010 tots@192.168.43.81

# hbase webui
ssh -i C:\Users\1962690\.ssh\id_rsa -L 31415:r8t3:31415 tots@192.168.43.81


#############################################################################
netstat -ln | grep mysql  # determine mysql socket

netstat -tlnp --numeric-ports | awk 'NR <= 2; NR > 2 {if($7 ~ "java") print $0 }'                                 # -l = listening
netstat -tanp --numeric-ports | awk 'NR <= 2; NR > 2 {if($7 ~ "garb" || $7 ~ "mysqld") print $0 }' | grep 4567    # -a = all
netstat -tanp | awk 'NR <= 2; NR > 2 {if($4 ~ /:2379/ && $6 == "ESTABLISHED") print $0 }' | grep -v ' 127\.' # as server for port 

# check listening ports and firewall
netstat -tulnp   ##  [--tcp|-t] [--udp|-u] [--listening|-l] [--numeric|-n] [--program|-p]

ss -ltn | grep 3306   ### ss command is a modern replacement for netstat command and provides similar functionality

#############################################################################
echo; firewall-cmd --list-ports; firewall-cmd --list-services

firewall-cmd --load-zone-defaults=public --permanent    ### reset/clear all settings

#############################################################################
# open port 
firewall-cmd --permanent --add-port={9000,8088,..........}/tcp
firewall-cmd --permanent --add-port={9051,9052,9053,9054}/tcp

firewall-cmd --permanent --add-port={8761,8762,8763,8764}/tcp
firewall-cmd --permanent --add-port=8081/tcp       # devapp01 ask by Varsha in msteams
firewall-cmd --permanent --add-port=8000-9999/tcp  # devapp01 ask by Manu in scrum
firewall-cmd --permanent --add-port={8182,8091}/tcp # SITHCDMA01 ask by Varsha in msteams
firewall-cmd --permanent --add-port=6432/tcp # pgbouncer on CICT-DEVCDMAPP04

firewall-cmd --permanent --add-port={61616,8000-9999}/tcp  # devapp5 ask by Varsha 12-10-2021 to be same with devapp01

firewall-cmd --permanent --add-port=5444/tcp

firewall-cmd --permanent --add-port={3306,4444,4567,4568}/tcp    ### pxc ports

############################################
# Check if pxc ports are open
############################################
# setup fake SST listener on node1
node1> nc -l 4444 | cat -
# setup fake IST listener on node1
node1> nc -l 4568 | cat -

# run check from node2:
node2> nmap --reason -P0 -p4444 192.168.122.181     # telnet equivalent
# run check from node2:
node2> nmap --reason -P0 -p4568 192.168.122.181     # telnet equivalent

# finally run check for MySQL (3306) and wsrep/gcomm (4567) from node2:
node2> nmap --reason -P0 -p3306,4567 192.168.122.181
node2> nmap --reason -P0 -p3306,4567,4444,4568 192.168.122.181

ping -I <NETWORK_INTERFACE> -c1 172.16.208.152    # ping using specific interface
nmap -e <NETWORK_INTERFACE> --reason -P0 -p4567 172.16.208.152
telnet -b <sourceaddress> <destination> <port>
nc -zv 192.168.122.101 6033  # check if port is open

curl -k https://192.168.122.101:443/v1/management/Node/Register
curl -v 192.168.122.101:443
curl -v telnet://192.168.122.2:3306



node2> nc -v -l 4568                    # setup fake IST listener on node2
node1> nc -v <node2_IP/hostname> 4568   # test connection

############################################

firewall-cmd --reload
firewall-cmd --list-ports
firewall-cmd --list-all

firewall-cmd --get-default-zone

# remove port
firewall-cmd --permanent --remove-port=9000/tcp
firewall-cmd --reload  # reload if --permanent is specified


# OR
firewall-cmd --permanent --new-service=pgbouncer
firewall-cmd --permanent --service=pgbouncer --set-description="A lightweight connection pooler for PostgreSQL"
firewall-cmd --permanent --service=pgbouncer --set-short=pgbouncer
firewall-cmd --permanent --service=pgbouncer --add-port=6432/tcp
firewall-cmd --permanent --add-service=pgbouncer
firewall-cmd --reload
firewall-cmd --info-service=pgbouncer
firewall-cmd --list-services
less /etc/firewalld/services/pgbouncer.xml         # newly created configuration
# firewall-cmd --permanent  --delete-service=pgbouncer

# OR 
less /usr/lib/firewalld/services/postgresql.xml    # pre-existing configuration
firewall-cmd --permanent --add-service=postgresql
firewall-cmd --reload

#############################################################################
# https://stackoverflow.com/questions/32722241/add-rule-to-firewalld-in-centos7-to-allow-all-traffic-from-a-server
sudo firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -s  [server+IP] -j ACCEPT

# allow all connection from hostname/IP # works on RHEL7 # DOES NOT work as intended on RHEL8
firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -s hm1 -j ACCEPT
firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -s 192.168.122.0/24 -j ACCEPT   # per subnet
firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -s 192.168.122.81/32 -j ACCEPT  # per server

# verify
firewall-cmd --direct --get-rules ipv4 filter INPUT

[root@hm1 ~]# firewall-cmd --direct --get-rules ipv4 filter INPUT
0 source address=192.168.122.0/24 -j ACCEPT

firewall-cmd --reload  # reload if --permanent is specified

# remove direct rule
firewall-cmd --permanent --direct --remove-rule ipv4 filter INPUT 0 -s 192.168.122.0/24 -j ACCEPT
firewall-cmd --reload

#####################
# https://serverok.in/firewall-cmd-list-rules

# add rich rule  # works on RHEL8
firewall-cmd --permanent --zone=public    --add-rich-rule='rule family="ipv4" source address="192.168.122.81/32" port protocol="tcp" port="1-65535" accept'
firewall-cmd --permanent --zone=public    --add-rich-rule='rule family="ipv4" source address="192.168.122.0/24" port protocol="tcp" port="1-65535" accept'

firewall-cmd --permanent --add-rich-rule='rule family=ipv4 port port="4568" protocol="tcp" reject'	### PXC/Galera reject IST port
firewall-cmd --add-rich-rule='rule protocol value="vrrp" accept' --permanent				### for keepalived hearthbeat 

#####################
# CS0043812
2) Firewall settings to block gcomm port(4567) from Garb to PXC nodes and reversely :
On PXC nodes :
c7-181> firewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address="192.168.122.184/32" destination address="192.168.122.181/32" port protocol="tcp" port="4567" reject'
c7-182> firewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address="192.168.122.184/32" destination address="192.168.122.182/32" port protocol="tcp" port="4567" reject'
c7-183> firewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address="192.168.122.184/32" destination address="192.168.122.183/32" port protocol="tcp" port="4567" reject'
firewall-cmd --reload
firewall-cmd --list-rich-rules

On garb(c7-184) :
firewall-cmd --permanent --add-rich-rule="rule family='ipv4' source address='192.168.122.181/32' destination address='192.168.122.184/32' port protocol='tcp' port='4567' reject"
firewall-cmd --permanent --add-rich-rule="rule family='ipv4' source address='192.168.122.182/32' destination address='192.168.122.184/32' port protocol='tcp' port='4567' reject"
firewall-cmd --permanent --add-rich-rule="rule family='ipv4' source address='192.168.122.183/32' destination address='192.168.122.184/32' port protocol='tcp' port='4567' reject"
firewall-cmd --reload
firewall-cmd --list-rich-rules

# firewall-cmd --list-rich-rules | grep . | while read l; do firewall-cmd --permanent --remove-rich-rule="$l"; done
# firewall-cmd --add-rich-rule='rule family=ipv4 source address="192.168.122.174/32" destination address="192.168.122.173/32" port protocol="tcp" port="4567" drop' ### drop : SYN_SENT in "netstat -tanp --numeric-ports"
#####################

firewall-cmd --reload  # reload if --permanent is specified

firewall-cmd --list-all --zone=public

# firewall-cmd --list-rich-rules
rule family="ipv4" source address="192.168.122.0/24" port port="1-65535" protocol="tcp" accept

# remove rich rule
firewall-cmd --permanent --zone=public --remove-rich-rule='rule family="ipv4" source address="192.168.122.81/32" port protocol="tcp" port="1-65535" accept'


#####################
# https://ktaraghi.blogspot.com/2013/10/what-is-firewalld-and-how-it-works.html
UnknownDecember 8, 2014 at 12:19 AM
how do i allow only ips from a certain network to access ssh services?. for example
i want only 100.0.0.0/24 to access ssh from public zone

thanks

Reply
Replies

AnonymousJanuary 8, 2015 at 8:49 AM
You can use rich language rules:
]# firewall-cmd --add-rich-rule 'rule family="ipv4" source address="100.0.0.0/24" forward-port to-addr="192.168.1.2" to-port="22" protocol="tcp" port="2222"' --zone public --permanent
success

Have sshd running on server port 22 default config. Now you can:
user @ 100.0.0.3 $ ssh -p2222 192.168.1.2

#####################
# SSH : -o suppress login message : -i identity file
ssh -o LogLevel=Error -i ~/.ssh/id_rsa_enterprisedb enterprisedb@172.31.80.109

ssh -i /home/totel/.ssh/id_rsa_kvm -o StrictHostKeyChecking=no root@192.168.122.65 id   ### avoid prompts on login 
ssh-keygen -f /home/totel/.ssh/known_hosts -R 192.168.122.65"  ### avoid "WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED"

#############################################################################
systemctl --failed
systemctl list-units --state failed --type service
systemctl list-unit-files --type=service   | grep -i mysql
systemctl list-unit-files                  | egrep 'UNIT|edb-|pgagent-13|postgresql-13|pemagent|httpd|postfix'   # reliable in listing all services
systemctl list-unit-files --state=disabled | egrep 'postgres|edb-'   
systemctl list-unit-files --state=enabled  | egrep 'postgres|edb-'

systemctl --all | egrep 'pemagent|edb|httpd'

systemctl | egrep 'UNIT|edb-|pgagent-13|postgresql-13|pemagent|httpd|postfix' | awk '{ print $1,$2,$3,$4 }' | column -t

systemctl --all | egrep 'wildfly|activemq|kafka|zookeeper'
systemctl list-unit-files  | egrep 'wildfly|activemq|kafka|zookeeper' # reliable in listing all services

f_strindex() {
  x="${1%%$2*}"
  [[ "$x" = "$1" ]] && echo -1 || echo "${#x}"
}

v_log=/tmp/cdm-db-systemctl.txt
systemctl --all > $v_log
v_line="`head -1 /tmp/cdm-db-systemctl.txt`"
for v_text in $v_line; do
        v_pos1=`f_strindex "$v_line" "$v_text"`
        v_post2=$((v_pos1-1))
        sed -i "s/\(.\{$v_post2\}\).\{1\}/\1|/" $v_log
done
cat $v_log | tr -s '[:space:]' | sed 's/ |/|/g' \
  | egrep 'UNIT|edb-|pgagent-13.ser|postgresql-13.ser|pemagent.ser|httpd.ser|postfix.ser' \
  | column -t -s'|' -o'|' -H 1 | grep -v httpd-init.service

#############################################################################
# for installed software
rpm -q --whatprovides /usr/sbin/mysqld
rpm -qf /usr/sbin/mysqld

# for software in all yum repo
yum whatprovides /usr/sbin/mysqld
yum whatprovides mysqld
#############################################################################
yum module list | egrep '^Name |^Hint: |^perl |^perl-DBD-MySQL |^perl-DBI |^perl-IO-Socket-SSL |^perl-libwww-perl |^python27 ' | sed 's/[ \t]*$//'
yum module disable mysql   ### on oracle linux 8 so we can install the community version which has the latest version

yum repolist disabled

yum list java-*
yum list postgresql13*

# list available versions
yum --showduplicates list postgresql13-server

yum search percona-server | grep 'erver-server'
yum --showduplicates list Percona-Server-server | expand

yum search percona-server-server-57
yum --showduplicates list percona-server-server-57 | expand   # from repo percona-release-x86_64

yum search xtrabackup
yum --showduplicates list percona-xtrabackup

yum search xtradb-cluster
yum --showduplicates list Percona-XtraDB-Cluster-server

yum list installed Percona\*
yum --disablerepo=\* provides mysql\*

yum list installed | egrep -i "percona" | awk '{if($1 !~ "release") print $0 }'	   ### exlude release package

######################
# el7 download and create repo
######################
yum --disablerepo=\* --enablerepo=c7-media install -y createrepo yum-utils
yum search percona-server | grep 'erver-server'
yum --showduplicates list Percona-Server-server | expand
yum install percona-server-server
yum install percona-server-server --downloadonly
cd /var/cache/yum/x86_64/7/
mv -nv ps-80-release-x86_64/packages/*.rpm /nfs/yum-repo/el7/ps-80-release-x86_64/
createrepo /nfs/yum-repo/el7/ps-80-release-x86_64/

#############################################################################
#############################################################################
#  7.1) SELinux : set to permissive
######################

# set SELinux to permissive mode
sudo setenforce 0  

# Set to permissive mode every server restart
# sudo vi /etc/selinux/config
SELINUX=permissive

# verify setting
sestatus | grep -i mode

[cdmadmin@CICT-DEVCDMAPP01 ~]$ sestatus | grep -i mode
Current mode:                   permissive
Mode from config file:          enforcing

#############################################################################
nmap -sL -n 192.168.18.23/29   # list servers of a subnet

# Naga server troubleshooting
nmap -v  -Pn -p 1521,8000,3389 192.168.2.15/32   # fast
nmap -sV -Pn -p 1521,8000,3389 192.168.2.15/32   # slow but (-sV) more detailed than above

[cdmadmin@CICT-DEVCDMAPP01 ~]$ nmap -sV -Pn -p 1521,8000,3389 192.168.2.15/32
Starting Nmap 7.70 ( https://nmap.org ) at 2021-06-29 18:24 PST
Nmap scan report for 192.168.2.15
Host is up (0.0061s latency).

PORT     STATE SERVICE            VERSION
1521/tcp open  oracle-tns         Oracle TNS Listener 11.1.0.6.0 (for 32-bit Windows)
3389/tcp open  ssl/ms-wbt-server?
8000/tcp open  tcpwrapped



nc -v -nn 192.168.0.102 2200

#############################################################################

# runuser -u hdfs -- hdfs dfs -ls /         # to run command for user with /sbin/nologin shell

#############################################################################
# run sudo redirect to file
sudo -s /bin/bash -c "echo never > /sys/kernel/mm/transparent_hugepage/defrag"

